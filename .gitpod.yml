# https://github.com/gitpod-samples/template-dotnet-core-cli-csharp
# https://www.gitpod.io/docs/introduction/languages/dotnet
# https://github.com/gitpod-samples/template-docker-compose
# https://www.gitpod.io/docs/references/gitpod-yml
# https://www.gitpod.io/docs/configure
# https://www.gitpod.io/docs/configure/workspaces/ports
# https://www.gitpod.io/docs/configure/projects/prebuilds

image:
  file: .gitpod.Dockerfile

vscode:
  extensions:
    - muhammad-sammy.csharp
    - editorconfig.editorconfig
    - vivaxy.vscode-conventional-commits
    - humao.rest-client
    - ms-azuretools.vscode-docker
    - donjayamanne.githistory
    - mutantdino.resourcemonitor
    - pkief.material-icon-theme
    - emmanuelbeziat.vscode-great-icons
    - fernandoescolar.vscode-solution-explorer
    - tabnine.tabnine-vscode
    - ms-vscode.vs-keybindings
    - streetsidesoftware.code-spell-checker
    - me-dutour-mathieu.vscode-github-actions

# https://www.gitpod.io/docs/configure/workspaces/tasks#execution-order
tasks:
  - name: Install dev cert
    #https://learn.microsoft.com/en-us/aspnet/core/security/docker-https?view=aspnetcore-7.0#macos-or-linux
    #https://learn.microsoft.com/en-us/aspnet/core/security/enforcing-ssl
    #`dotnet dev-certs https --trust` is only supported on macOS and Windows, but we don't get exception because of none trusted cert in our application, if we don't use this cert we get exception. It is likely that we need to trust the certificate in `your browser` and allow to process for none trusted cert.
    init: |
      dotnet dev-certs https -ep ${HOME}/.aspnet/https/aspnetapp.pfx -p 123456
      dotnet dev-certs https --trust

  - name: Husky Tools Setup
    # https://www.gitpod.io/docs/configure/projects
    # https://www.gitpod.io/docs/configure/projects/prebuilds
    # https://www.gitpod.io/docs/configure/workspaces/tasks
    # If prebuild is set up on repository with linking repository to a project, when there is a commit to project `init` commands will execute in prebuild process and its workspace will share with all new created workspace for this project, if we don't have a project when we create a new workspace `init` commands will execute
    init: |
      npm install
      npm run prepare

  - name: Restore and Build dotnet
    # https://www.gitpod.io/docs/configure/projects
    # https://www.gitpod.io/docs/configure/projects/prebuilds
    # https://www.gitpod.io/docs/configure/workspaces/tasks
    # If prebuild is set up on repository with linking repository to a project, when there is a commit to project `init` commands will execute in prebuild process and its workspace will share with all new created workspace for this project, if we don't have a project when we create a new workspace `init` commands will execute
    init: |
      gp sync-await docker-bundle # wait for the bellow 'init' to finish
      dotnet restore
      dotnet build
      gp sync-done build-bundle

  # each task creates a new terminal window
  # https://www.gitpod.io/docs/configure/workspaces/tasks#wait-for-commands-to-complete
  - name: Init Docker-Compose
    # https://www.gitpod.io/docs/configure/projects/prebuilds
    # We load docker on pre-build for increasing speed
    init: |
      docker-compose -f ./deployments/docker-compose/docker-compose.infrastructure.yaml pull
      # https://www.gitpod.io/docs/configure/workspaces/tasks#wait-for-commands-to-complete
      # https://github.com/gitpod-io/openvscode-server/discussions/373
      gp sync-done docker-bundle
    command: |
      docker-compose -f ./deployments/docker-compose/docker-compose.infrastructure.yaml up -d

#  - name: Run Catalogs in Watch Mode
#    # https://www.gitpod.io/docs/configure/workspaces/tasks#wait-for-commands-to-complete
#    # https://github.com/gitpod-io/openvscode-server/discussions/373
#    init: |
#      gp sync-await docker-bundle # wait for the above 'init' to finish
#      gp sync-await build-bundle  # wait for the above 'init' to finish
#    # https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-run#options
#    command: |
#      # hot reload doesn't work correctly with --no-build and --no-restore and after each change will restart the app with hot reload app should not be restarted
#      dotnet watch -lp Catalogs.Api.Http
#
#  - name: Run Identity in Watch Mode
#    init: |
#      gp sync-await docker-bundle # wait for the above 'init' to finish
#      gp sync-await build-bundle  # wait for the above 'init' to finish
#    command: |
#      dotnet watch -lp Identity.Api.Http
#
#  - name: Run Customers in Watch Mode
#    init: |
#      gp sync-await docker-bundle # wait for the above 'init' to finish
#      gp sync-await build-bundle  # wait for the above 'init' to finish
#    command: |
#      # hot reload doesn't work correctly with --no-build and --no-restore and after each change will restart the app with hot reload app should not be restarted
#      dotnet watch -lp Customers.Api.Http

# https://www.gitpod.io/docs/configure/projects/prebuilds#github-specific-configuration
github:
  prebuilds:
    # enable for the default branch (defaults to true)
    master: true
    # enable for all branches in this repo (defaults to false)
    branches: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: false
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: false
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: false

#https://www.gitpod.io/docs/configure/workspaces/ports#exposing-ports
#https://github.com/gitpod-io/gitpod/issues/1867
ports:
  - port: 1000-9000
    onOpen: ignore
