// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rancho.Services.Feeding.Shared.Data;

#nullable disable

namespace Rancho.Services.Feeding.Shared.Data.Migrations
{
    [DbContext(typeof(FeedingDbContext))]
    partial class FeedingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rancho.Services.Feeding.Animals.Models.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("EarTagNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ear_tag_number");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uuid")
                        .HasColumnName("farm_id");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("species");

                    b.HasKey("Id")
                        .HasName("pk_animals");

                    b.HasIndex("FarmId")
                        .HasDatabaseName("ix_animals_farm_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_animals_id");

                    b.ToTable("animals", "feeding");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Farms.Models.Farm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.HasKey("Id")
                        .HasName("pk_farms");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_farms_id");

                    b.ToTable("farms", "feeding");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.FeedPlans.Models.FeedPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid")
                        .HasColumnName("animal_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DispenseDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dispense_date");

                    b.Property<Guid>("FeedId")
                        .HasColumnType("uuid")
                        .HasColumnName("feed_id");

                    b.Property<DateTime>("FixationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fixation_date");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<decimal>("WeightDispensed")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("weight_dispensed");

                    b.Property<decimal>("WeightEaten")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("weight_eaten");

                    b.HasKey("Id")
                        .HasName("pk_feed_plans");

                    b.HasIndex("AnimalId")
                        .HasDatabaseName("ix_feed_plans_animal_id");

                    b.HasIndex("FeedId")
                        .HasDatabaseName("ix_feed_plans_feed_id");

                    b.ToTable("feed_plans", "feeding");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Feeds.Models.Feed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uuid")
                        .HasColumnName("farm_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("type");

                    b.Property<decimal>("WeightInStock")
                        .HasColumnType("numeric")
                        .HasColumnName("weight_in_stock");

                    b.HasKey("Id")
                        .HasName("pk_feeds");

                    b.HasIndex("FarmId")
                        .HasDatabaseName("ix_feeds_farm_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_feeds_id");

                    b.ToTable("feeds", "feeding");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Animals.Models.Animal", b =>
                {
                    b.HasOne("Rancho.Services.Feeding.Farms.Models.Farm", "Farm")
                        .WithMany("Animals")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_farms_farm_id");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.FeedPlans.Models.FeedPlan", b =>
                {
                    b.HasOne("Rancho.Services.Feeding.Animals.Models.Animal", "Animal")
                        .WithMany("FeedPlans")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_feed_plans_animals_animal_id");

                    b.HasOne("Rancho.Services.Feeding.Feeds.Models.Feed", "Feed")
                        .WithMany("FeedPlans")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_feed_plans_feeds_feed_id");

                    b.Navigation("Animal");

                    b.Navigation("Feed");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Feeds.Models.Feed", b =>
                {
                    b.HasOne("Rancho.Services.Feeding.Farms.Models.Farm", "Farm")
                        .WithMany("Feeds")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_feeds_farms_farm_id");

                    b.OwnsOne("Rancho.Services.Feeding.Feeds.ValueObjects.Nutrition", "Nutrition", b1 =>
                        {
                            b1.Property<Guid>("FeedId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<decimal>("Calories")
                                .HasColumnType("numeric")
                                .HasColumnName("nutrition_calories");

                            b1.Property<decimal>("Carbohydrate")
                                .HasColumnType("numeric")
                                .HasColumnName("nutrition_carbohydrate");

                            b1.Property<decimal>("Fat")
                                .HasColumnType("numeric")
                                .HasColumnName("nutrition_fat");

                            b1.Property<decimal>("Protein")
                                .HasColumnType("numeric")
                                .HasColumnName("nutrition_protein");

                            b1.HasKey("FeedId");

                            b1.ToTable("feeds", "feeding");

                            b1.WithOwner()
                                .HasForeignKey("FeedId")
                                .HasConstraintName("fk_feeds_feeds_id");
                        });

                    b.Navigation("Farm");

                    b.Navigation("Nutrition")
                        .IsRequired();
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Animals.Models.Animal", b =>
                {
                    b.Navigation("FeedPlans");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Farms.Models.Farm", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Feeds");
                });

            modelBuilder.Entity("Rancho.Services.Feeding.Feeds.Models.Feed", b =>
                {
                    b.Navigation("FeedPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
