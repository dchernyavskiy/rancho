// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rancho.Services.Management.Shared.Data;

#nullable disable

namespace Rancho.Services.Management.Shared.Data.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20230619095828_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rancho.Services.Management.Animals.Models.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("EarTagNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ear_tag_number");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uuid")
                        .HasColumnName("farm_id");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("species");

                    b.HasKey("Id")
                        .HasName("pk_animals");

                    b.HasIndex("FarmId")
                        .HasDatabaseName("ix_animals_farm_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_animals_id");

                    b.HasIndex("Id", "EarTagNumber", "FarmId")
                        .IsUnique()
                        .HasDatabaseName("ix_animals_id_ear_tag_number_farm_id");

                    b.ToTable("animals", "management");
                });

            modelBuilder.Entity("Rancho.Services.Management.Farmers.Models.Farmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uuid")
                        .HasColumnName("farm_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_farmers");

                    b.HasIndex("FarmId")
                        .HasDatabaseName("ix_farmers_farm_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_farmers_id");

                    b.ToTable("farmers", (string)null);
                });

            modelBuilder.Entity("Rancho.Services.Management.Farms.Models.Farm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.HasKey("Id")
                        .HasName("pk_farms");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_farms_id");

                    b.ToTable("farms", "management");
                });

            modelBuilder.Entity("Rancho.Services.Management.Works.Models.Work", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<Guid>("FarmerId")
                        .HasColumnType("uuid")
                        .HasColumnName("farmer_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_works");

                    b.HasIndex("FarmerId")
                        .HasDatabaseName("ix_works_farmer_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_works_id");

                    b.ToTable("works", "management");
                });

            modelBuilder.Entity("Rancho.Services.Management.Animals.Models.Animal", b =>
                {
                    b.HasOne("Rancho.Services.Management.Farms.Models.Farm", "Farm")
                        .WithMany("Animals")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_farms_farm_id");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Rancho.Services.Management.Farmers.Models.Farmer", b =>
                {
                    b.HasOne("Rancho.Services.Management.Farms.Models.Farm", "Farm")
                        .WithMany("Farmers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_farmers_farms_farm_id");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Rancho.Services.Management.Works.Models.Work", b =>
                {
                    b.HasOne("Rancho.Services.Management.Farmers.Models.Farmer", "Farmer")
                        .WithMany("Works")
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_works_farmers_farmer_id");

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("Rancho.Services.Management.Farmers.Models.Farmer", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Rancho.Services.Management.Farms.Models.Farm", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Farmers");
                });
#pragma warning restore 612, 618
        }
    }
}
